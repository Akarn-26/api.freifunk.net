{
    "$schema": "http://json-schema.org/draft-07/schema",
    "description": "Freifunk Community API 0.3.0",
    "type": "object",
    "additionalProperties": false,
    "definitions": {

        "city": {
            "type": "string",
            "title": "City",
            "description": "Name of the city"
        },

        "country": {
            "type": "string",
            "title": "Country",
            "description": "Your country"
        },

        "address": {
            "type":"object",
            "additionalProperties": false,
            "description": "The address of the place you meet",
            "properties": {
                "Name": {
                    "type": "string",
                    "title": "Name of your place",
                    "description": "The name of the place you meet"
                },
                "Street": {
                    "type": "string",
                    "title": "Street",
                    "description": "The street address of your meeting place"
                },
                "Zipcode": {
                    "type": "string",
                    "title": "ZIP",
                    "description": "The zip code of your meeting place"
                }
            }
        },

        "lat": {
            "type": "number",
            "title": "Latitude",
            "description": "Lattitude of your city"
        },

        "lon": {
            "type": "number",
            "title": "Longitude",
            "description": "Longitude of your city"
        },

        "email": {
            "type": "string",
            "title": "Email",
            "format": "email",
            "pattern": "^[A-Za-z0-9äöüÄÖUß_\\-\\.]+@[A-Za-z0-9äöüÄÖUß_\\-\\.]+\\.[A-Za-z]{2,}$"
        },

        "url": {
            "type": "string",
            "pattern": "^(http|https)://[A-Za-z0-9ÄÖÜäöüß\\-_\\./]+"
        },

        "phone": {
            "type": "string",
            "title": "Phone"
        }
    },

    "properties": {

        "api": {
            "type": "string",
            "title": "API",
            "description": "The Freifunk Community API version you use",
            "enum": ["0.1", "0.2.0", "0.2.1", "0.3.0"],
            "default": "0.3.0"
        },

        "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of your community"
        },

        "metacommunity": {
            "type": "string",
            "title": "Metacommunity",
            "description": "The name of your metacommunity, if your local community belongs to a bigger one"
        },

        "location": {
            "title": "Location",
            "type": "object",
            "additionalProperties": false,
            "description": "Position data such as a postal address or geographic coordinates",
            "properties": {
                "city": { "$ref": "#/definitions/city" },
                "country": { "$ref": "#/definitions/country" },
                "address": { "$ref": "#/definitions/address" },
                "lat": { "$ref": "#/definitions/lat" },
                "lon": { "$ref": "#/definitions/lon" }
            },
            "required": ["city", "lat", "lon"]
        },

        "contact": {
            "type": "object",
            "additionalProperties": false,
            "minProperties": 1,
            "properties": {
                "email": { 
                    "$ref": "#/definitions/email",
                    "title": "Email",
                    "description": "Email address to which other people can contact your community (user@domain.com)"
                },
                "facebook": {
                    "type": "string",
                    "title": "facebook",
                    "description": "URL to your community's facebook account (https://facebook.com/...)",
                    "pattern": "^(http|https)://([a-z\\-]*\\.|)facebook\\.com/[A-Za-z0-9ÄÖÜäöüß\\-_\\.]+"
                },
                "identica": {
                    "type": "string",
                    "title": "identica",
                    "description": "URL to your community's identica account"
                },
                "irc": {
                    "type":"string",
                    "title": "IRC",
                    "description": "Your community's ICR channel; starts with irc://",
                    "pattern": "^irc://.*"
                },
                "jabber": {
                    "type": "string",
                    "title": "Jabber",
                    "description": "A jabber account someone reads"
                },
                "ml": {
                    "type": "string",
                    "title": "Mailinglist",
                    "description": "The email address (user@domain.com) of your mailing list or a link to the mailinglist info page (http{s}://...)",
                    "pattern": "^([A-Za-z0-9äöüÄÖUß_\\-\\.]+@[A-Za-z0-9äöüÄÖUß_\\-\\.]+\\.[A-Za-z]{2,}|(http|https)://[A-Za-z0-9ÄÖÜäöüß\\-_\\./]+)$"
                },
                "googleplus": {
                    "type": "string",
                    "title": "Google+",
                    "description": "URL to your community's g+ account"
                },
                "twitter": {
                    "type": "string",
                    "title": "Twitter",
                    "description": "Your community's Twitter name (starts with @)",
                    "pattern": "^@[A-Za-z0-9]{1,15}"
                },
                "phone": {
                    "$ref": "#/definitions/phone",
                    "title": "Phone",
                    "description": "If your community has a phone number"
                }
            }
        },

        "url": {
            "title": "HomePage",
            "$ref": "#/definitions/url",
            "description": "The main website (http{s}://...)"
        },

        "timeline": {
            "type": "array",
            "description": "These are lifetime events something like date of birth (and rebirth :-) of your community or other important milestones",
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "decription": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of your lifetime event"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "description": "ISO 8601 timestamp of the event's date (format yyyy-mm-dd)"
                    }
                }
            }
        },

        "feeds": {
            "type": "array",
            "title": "Feeds",
            "description": "Feeds you provide your community",
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Feed name",
                        "description": "Name of the feed"
                    },
                    "category": {
                        "type": "string",
                        "title": "Feed category",
                        "description": "Category of the feed like blog entries, calendars, forum messages, wiki articles, ...",
                        "enum": ["blog", "forum", "ics", "wiki", "others", ""],
                        "default": ""
                    },
                    "type": {
                        "type": "string",
                        "title": "Feed Type",
                        "description": "Type of the feed like RSS, Atom, XML"
                    },
                    "url": {
                        "$ref": "#/definitions/url",
                        "title": "URL",
                        "description": "URL of the feed"
                    }
                }
            }
        },

        "state": {
            "type": "object",
            "additionalProperties": false,
            "title": "States",
            "description": "A collection of status-related data. Actual open/closed status, icons, last change timestamp etc.",
            "properties": {
                "nodes": {
                    "type": "integer",
                    "minimum": 0,
                    "title": "Active Nodes",
                    "description": "Number of active nodes"
                },
                "lastchange": {
                    "type":"string",
                    "title": "Last Change",
                    "format": "date-time",
                    "description": "At what ISO 8601 timestamp has your community status lastly changed?",
                    "default": 0
                },
                "message": {
                    "type": "string",
                    "title": "Message",
                    "description": "A free-form string something like 'open for public', 'members only' or whatever you want it to be)"
                }
            },
            "required": [ "lastchange" ]
        },

        "nodeMaps": {
            "type": "array",
            "title": "Nodes",
            "description": "Maps of nodes or topology your community provides",
            "items": {
                "type": "object",
                "additionalProperties": false,
                "title": "node",
                "properties": {
                    "url": {
                        "$ref": "#/definitions/url",
                        "title": "URL of the map",
                        "description": "The URL where the map is located"
                    },
                    "interval": {
                        "type": "string",
                        "title": "interval",
                        "description": "How often the map will be refreshed"
                    },
                    "technicalType": {
                        "type": "string",
                        "title": "map techincal type",
                        "description": "The kind of map is used",
                        "enum": [ "", "ffmap", "olsr-dot", "openwifimap"],
                        "default": ""
                    },
                    "mapType": {
                        "type": "string",
                        "title": "Maptype",
                        "description": "",
                        "enum": [ "", "geographical", "structural", "list/status" ],
                        "default": ""
                    }
                }
            }
        },

        "services": {
            "type": "array",
            "title": "Services",
            "description": "Services Provided by your community",
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "title": "Service Name",
                        "description": "Name of your service (e.g. jabber...)"
                    },
                    "serviceDescription": {
                        "type": "string",
                        "title": "Service Description",
                        "description": "Describe your service"
                    },
                    "externalUri": {
                        "type": "string",
                        "title": "External URI",
                        "description": "URI to use your service from the internet"
                    },
                    "internalURI": {
                        "type": "string",
                        "title": "Internal URI",
                        "description": "URI to use your service from Freifunk or icvpn-networks"
                    }
                }
            }
        },

        "techDetails": {
            "type": "object",
            "additionalProperties": false,
            "description": "Technical details of your community's Freifunk implementation",
            "properties": {
                "bootstrap": {
                    "description": "how to deal with fresh routers",
                    "title": "Bootstrap",
                    "type": "string"
                },
                "firmware": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "url": {
                            "$ref": "#/definitions/url",
                            "title": "Firmware download and docs",
                            "description": "Link to your firmware images and docs"
                        },
                        "name": {
                            "type":"string",
                            "title": "Firmware Name",
                            "description": "Name of your firmware"
                        }
                    }
                },
                "keyexchange": {
                    "description": "needs to be defined",
                    "type": "string"
                },
                "networks": {
                    "type": "object",
                    "additionalProperties": false,
                    "title": "Networks",
                    "description": "Networks used by your community",
                    "properties": {
                        "ipv6": {
                            "type": "array",
                            "description": "IPv6 networks used by your community",
                            "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "title": "ipv6 network object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "description": "IPv6 network network (e.g.2620:0:2d0:200::7/32) in CIDR notation",
                                        "pattern": "^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*(\\/(\\d|\\d\\d|1[0-1]\\d|12[0-8]))$"
                                    }
                                }
                            }
                        },
                        "ipv4": {
                            "type": "array",
                            "description": "IPv4 networks used by your community",
                            "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "title": "ipv4 network object",
                                "properties": {
                                    "network": {
                                        "type": "string",
                                        "description": "IPv4 network name (e.g. 10.w.x.y/z) in CIDR notation",
                                        "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(\\d|[1-2]\\d|3[0-2]))$"
                                    }
                                }
                            }
                        }
                    }
                },
                "routing": {
                    "default": "",
                    "description": "routing protocol used within your community",
                    "enum": [
                        "",
                        "OLSR",
                        "BATMAN",
                        "Babel",
                        "802.11s",
                        "batman-adv",
                        "bmx",
                        "OLSRv2"
                    ],
                    "title": "Routing protocol"
                },
                "splashpage": {
                    "description": "what kind of splashpage does your community use?",
                    "title": "Splash Page",
                    "type": "string"
                },
                "stoererhaftung": {
                    "description": "how the German störerhaftung is handled",
                    "title": "Störerhaftung",
                    "type": "string"
                },
                "tld": {
                    "description": "the top level domain used by your community",
                    "properties": {
                        "domainname": {
                            "description": "the top level domain name (e.g. ffhh, ffol)",
                            "pattern": "^[A-Za-z]{2,}$",
                            "title": "Top Level Domain Name",
                            "type": "string"
                        },
                        "nameserver": {
                            "description": "Nameservers servings zones of your top level domain",
                            "items": {
                                "pattern": "^[A-Za-z0-9äöüÄÖUß_\\-.]*$",
                                "type": "string"
                            },
                            "title": "TLD Nameserver",
                            "type": "array"
                        }
                    },
                    "title": "Top Level Domain",
                    "type": "object"
                    "additionalProperties": false,
                },
                "topodata": {
                    "description": "link to your topology data (dot-files? needs to be defined)",
                    "title": "Topology data",
                    "type": "string"
                },
                "updatemode": {
                    "description": "how do you deploy firmware updates?",
                    "title": "Updatemode",
                    "type": "string"
                },
                "vpn": {
                    "description": "implementation of inner city vpn",
                    "title": "VPN",
                    "type": "string"
                }
            }
        }
    },
    "required": ["name", "location", "contact", "url", "state" ]
}
